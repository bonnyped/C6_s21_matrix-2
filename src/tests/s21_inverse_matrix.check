#suite s21_inverse_matrix

#test s21_inverse_matrix_1
  matrix_t A;
  matrix_t result;
  s21_create_matrix(3, 3, &A);

  A.matrix[0][0] = 2.0;
  A.matrix[0][1] = 5.0;
  A.matrix[0][2] = 7.0;

  A.matrix[1][0] = 6.0;
  A.matrix[1][1] = 3.0;
  A.matrix[1][2] = 4.0;

  A.matrix[2][0] = 5.0;
  A.matrix[2][1] = -2.0;
  A.matrix[2][2] = -3.0;

  ck_assert_int_eq(s21_inverse_matrix(&A, &result), 0);

  ck_assert_double_eq_tol(result.matrix[0][0], 1.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[0][1], -1.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[0][2], 1.0, S21_EPSILON);

  ck_assert_double_eq_tol(result.matrix[1][0], -38.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[1][1], 41.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[1][2], -34.0, S21_EPSILON);

  ck_assert_double_eq_tol(result.matrix[2][0], 27.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[2][1], -29.0, S21_EPSILON);
  ck_assert_double_eq_tol(result.matrix[2][2], 24.0, S21_EPSILON);

  s21_remove_matrix(&A);
  s21_remove_matrix(&result);

#test s21_inverse_matrix_3
  matrix_t A;
  matrix_t result;
  s21_create_matrix(1000, 0, &A);

  ck_assert_int_eq(s21_inverse_matrix(&A, &result), 1);

  s21_remove_matrix(&A);
  s21_remove_matrix(&result);

#test s21_inverse_matrix_4
  matrix_t A;
  matrix_t result;
  s21_create_matrix(1000, 100001, &A);

  ck_assert_int_eq(s21_inverse_matrix(&A, &result), 2);

  s21_remove_matrix(&A);
  s21_remove_matrix(&result);

#test s21_inverse_matrix_5
  matrix_t A;
  matrix_t result;
  s21_create_matrix(-1, 100001, &A);

  ck_assert_int_eq(s21_inverse_matrix(&A, &result), 1);

  s21_remove_matrix(&A);
  s21_remove_matrix(&result);

#test s21_inverse_matrix_6
  matrix_t A;
  matrix_t result;
  s21_create_matrix(1001, 1000, &A);

  ck_assert_int_eq(s21_inverse_matrix(&A, &result), 2);

  s21_remove_matrix(&A);
  s21_remove_matrix(&result);

#test s21_inverse_matrix_7
  matrix_t A, B, C;
  s21_create_matrix(3, 3, &A);
  s21_create_matrix(3, 3, &C);
  A.matrix[0][0] = 2;
  A.matrix[0][1] = 5;
  A.matrix[0][2] = 7;
  A.matrix[1][0] = 6;
  A.matrix[1][1] = 3;
  A.matrix[1][2] = 4;
  A.matrix[2][0] = 5;
  A.matrix[2][1] = -2;
  A.matrix[2][2] = -3;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 0);
  C.matrix[0][0] = 1;
  C.matrix[0][1] = -1;
  C.matrix[0][2] = 1;
  C.matrix[1][0] = -38;
  C.matrix[1][1] = 41;
  C.matrix[1][2] = -34;
  C.matrix[2][0] = 27;
  C.matrix[2][1] = -29;
  C.matrix[2][2] = 24;
  ck_assert_int_eq(s21_eq_matrix(&B, &C), SUCCESS);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_8
  matrix_t A, B, C;
  s21_create_matrix(3, 3, &A);
  s21_create_matrix(3, 3, &C);
  A.matrix[0][0] = 1;
  A.matrix[0][1] = 2;
  A.matrix[0][2] = 3;
  A.matrix[1][0] = 4;
  A.matrix[1][1] = 5;
  A.matrix[1][2] = 6;
  A.matrix[2][0] = 7;
  A.matrix[2][1] = 8;
  A.matrix[2][2] = 9;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 2);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_9
  matrix_t A, B;
  s21_create_matrix(3, 2, &A);
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 2);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

#test s21_inverse_matrix_10
  matrix_t A, B, C;
  s21_create_matrix(4, 4, &A);
  s21_create_matrix(4, 4, &C);
  A.matrix[0][0] = 1;
  A.matrix[0][1] = 2;
  A.matrix[0][2] = 3;
  A.matrix[0][3] = 4;
  A.matrix[1][0] = 0;
  A.matrix[1][1] = 4;
  A.matrix[1][2] = 2;
  A.matrix[1][3] = 1;
  A.matrix[2][0] = 5;
  A.matrix[2][1] = 2;
  A.matrix[2][2] = 1;
  A.matrix[2][3] = 3;
  A.matrix[3][0] = 3;
  A.matrix[3][1] = 7;
  A.matrix[3][2] = 2;
  A.matrix[3][3] = 4;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 0);
  C.matrix[0][0] = -0.125;
  C.matrix[0][1] = 0.1916667;
  C.matrix[0][2] = 0.325;
  C.matrix[0][3] = -0.1666667;
  C.matrix[1][0] = -0.125;
  C.matrix[1][1] = 0.0583333;
  C.matrix[1][2] = -0.075;
  C.matrix[1][3] = 0.1666667;
  C.matrix[2][0] = 0.125;
  C.matrix[2][1] = 0.675;
  C.matrix[2][2] = 0.275;
  C.matrix[2][3] = -0.5;
  C.matrix[3][0] = 0.25;
  C.matrix[3][1] = -0.5833333;
  C.matrix[3][2] = -0.25;
  C.matrix[3][3] = 0.3333333;
  ck_assert_int_eq(s21_eq_matrix(&B, &C), SUCCESS);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_11
  matrix_t A, B, C;
  s21_create_matrix(1, 1, &A);
  s21_create_matrix(1, 1, &C);
  A.matrix[0][0] = 2;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 0);
  C.matrix[0][0] = 0.5;
  ck_assert_int_eq(s21_eq_matrix(&B, &C), SUCCESS);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_12
  matrix_t A, B, C;
  s21_create_matrix(1, 1, &A);
  s21_create_matrix(1, 1, &C);
  A.matrix[0][0] = -8;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 0);
  C.matrix[0][0] = -0.125;
  ck_assert_int_eq(s21_eq_matrix(&B, &C), SUCCESS);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_13
  matrix_t A, B, C;
  s21_create_matrix(1, 1, &A);
  s21_create_matrix(1, 1, &C);
  A.matrix[0][0] = 0;
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 2);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  s21_remove_matrix(&C);

#test s21_inverse_matrix_14
  matrix_t A, B;
  s21_create_matrix(3, 4, &A);
  ck_assert_int_eq(s21_inverse_matrix(&A, &B), 2);
  s21_remove_matrix(&A);